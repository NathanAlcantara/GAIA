service: sns-lambda
app: ${app}
org: ${org}

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-pseudo-parameters
  - serverless-python-requirements

custom:
  bundle:
    caching: true
    linting: true
    stats: false

provider:
  name: aws
  runtime: python3.7
  stage: ${opt:stage}
  environment:
    REGION: "#{AWS::Region}"
    ACCOUNT_ID: "#{AWS::AccountId}"
    TELEGRAM_TOKEN: ${telegramToken}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - lambda:Invoke*
        - sns:*
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

functions:
  setWebhook:
    runtime: nodejs10.x
    handler: handler.setWebhook
    events:
      - http:
          path: /telegram
          method: head

  telegramHandler:
    runtime: nodejs10.x
    handler: handler.telegram
    events:
      - http:
          path: /telegram/${telegramToken}
          method: post
          cors: true
    onError: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:send-error

  telegramResponse:
    runtime: nodejs10.x
    handler: src/core/telegramResponseHandler.send
    events:
      - sns: send-telegram-response

  error:
    runtime: nodejs10.x
    handler: src/core/errorHandler.send
    events:
      - sns: send-error

  # countCharacteres:
  #   handler: src/characteresHandler.count
  #   event:
  #     - sns: count-characteres
