import logging
import unicodedata
import re
import sys
from string import ascii_lowercase

logger = logging.getLogger()
logger.setLevel(logging.INFO)

LETTERS = {letter: str(index)
           for index, letter in enumerate(ascii_lowercase, start=1)}


def alphabet_position(text):
    text = text.lower()
    LETTERS[' '] = '-'
    numbers = [LETTERS[character]
               for character in text if character in LETTERS]

    return ' '.join(numbers)


def removerEspeciais(palavra):

    # Unicode normalize transforma um carácter em seu equivalente em latin.
    nfkd = unicodedata.normalize('NFKD', palavra)
    palavraSemAcento = u"".join(
        [c for c in nfkd if not unicodedata.combining(c)])

    # Usa expressão regular para retornar a palavra apenas com números, letras e espaço
    return re.sub('[^a-zA-Z0-9 \\\]', '', palavraSemAcento)


def alphabet_reverse(text):
    numeros = text.split()
    resposta = []
    LETTERS['-'] = '-'
    logger.info(numeros)
    for i in numeros:
        for k, j in LETTERS.items():
            if j == i:
                resposta.append(k)
    return ' '.join(resposta)


def removePontuacao(text):
    tbl = dict.fromkeys(i for i in range(sys.maxunicode)
                        if unicodedata.category(chr(i)).startswith('P'))  # tabela para pontuação unicode
    return text.translate(tbl)
