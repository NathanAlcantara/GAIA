import json
import logging
import unicodedata
import os
import sys
import boto3


OK_RESPONSE = {
    'statusCode': 200,
    'headers': {'Content-Type': 'application/json'},
    'body': json.dumps('ok')
}

ERROR_RESPONSE = {
    'statusCode': 400,
    'body': json.dumps('Oops, something went wrong!')
}


def publishSnsTopic(chatId, payload, snsName="send-telegram-response"):

    logger = logging.getLogger()
    logger.setLevel(logging.INFO)

    sns = boto3.client('sns')  # criamos um SNS para enviar

    my_session = boto3.session.Session()
    aws_reg = my_session.region_name  # nome da regiao

    with open('environment.json', 'r') as arquivo:
        data = arquivo.read()

    jhon = json.loads(data)

    aws_account = jhon['AWS_ACCOUNT_ID']
    tenant = jhon['TENANT']

    logger.info(aws_reg)
    logger.info(aws_account)

    # aqui Ã© o log do que vamos mandar e para onde
    logger.info('Publicando mensagem: {} no sns: {}'.format(payload, snsName))

    # vamos formatar o json de saida

    PyJson = json.loads(payload)

    PyJson['chatId'] = chatId

    jhon = json.dumps(PyJson)

    logger.info('Publicando Json : {} no sns: {}'.format(jhon, snsName))

    # ajeitamos o sns nome correto
    arnSNS = 'arn:aws:sns:{}:{}:{}-{}'.format(
        aws_reg, aws_account, tenant, snsName)

    logger.info("Assim ficou a string do arnSNS: {}".format(arnSNS))
    # aqui envia a resposta
    response = sns.publish(TopicArn=arnSNS, Message=jhon)
