import sqlalchemy

USER_STRUCTURE = {
    "name": string,
    "photo_file": string,
    "birth_date": string,
    "chat_id": int,
    "access_level": int,
    "status": int,
    "cpf": int,
    "address": string
}


def save_user(user):
    # TODO validar argumentos
    assert check_structure(USER_STRUCTURE, user)

    # TODO estabelecer conexão

    # TODO gravar informações

    status = 200
    output = {'status': status, 'user':user}
    return output


# Função que valida a estrutura de argumentos de um dicionário
# Retirado de https://stackoverflow.com/questions/45812387/how-to-validate-structure-or-schema-of-dictionary-in-python
def check_structure(struct, data):
    if isinstance(struct, dict) and isinstance(data, dict):
        # struct is a dict of types or other dicts
        return all(k in conf and check_structure(struct[k], data[k]) for k in struct)
    if isinstance(struct, list) and isinstance(data, list):
        # struct is list in the form [type or dict]
        return all(check_structure(struct[0], c) for c in data)
    elif isinstance(struct, type):
        # struct is the type of conf
        return isinstance(conf, struct)
    else:
        # struct is neither a dict, nor list, not type
        return False

class orm:

    # TODO
    engine = sqlalchemy.create_engine()